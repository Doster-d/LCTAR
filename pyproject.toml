[project]
name = "lctar"
version = "0.1.0"
description = ""
authors = [
    {name = "Rinat",email = "oblom.ru@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "django (>=5.2.6,<6.0.0)",
    "djangorestframework (>=3.15.0,<4.0.0)",
    "python-decouple (>=3.8,<4.0)",
    "pre-commit (>=4.3.0,<5.0.0)",
    "ruff (>=0.13.2,<0.14.0)",
    "mysqlclient (>=2.2.0,<3.0.0)"
]


package-mode = false

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[dependency-groups]
dev = [
    "ruff (>=0.13.2,<0.14.0)"
]

[tool.ruff]
line-length = 88
target-version = "py313"
fix = true
unsafe-fixes = true
show-fixes = true

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG",    # flake8-unused-arguments
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "PIE",    # flake8-pie
    "PT",     # flake8-pytest-style
    "Q",      # flake8-quotes
    "RSE",    # flake8-raise
    "RET",    # flake8-return
    "SLF",    # flake8-self
    "SLOT",   # flake8-slots
    "T20",    # flake8-print
    "TID",    # flake8-tidy-imports
    "TCH",    # flake8-type-checking
    "INT",    # flake8-gettext
    "ICN",    # flake8-import-conventions
    "G",      # flake8-logging-format
    "INP",    # flake8-no-pep420
    "PTH",    # flake8-use-pathlib
    "ERA",    # eradicate
    "PD",     # pandas-vet
    "PGH",    # pygrep-hooks
    "PL",     # pylint
    "TRY",    # tryceratops
    "FLY",    # flynt
    "NPY",    # numpy
    "AIR",    # airflow
    "PERF",   # perflint
    "FURB",   # refurb
]
ignore = [
    "E501",   # line too long (handled by formatter)
    "B008",   # do not perform function calls in argument defaults
    "B904",   # allow raise from
    "PLR0913", # too many arguments
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "PLR2004", # magic value used in comparison
    "TRY003", # avoid specifying long messages outside the exception class
]

[tool.ruff.lint.isort]
known-first-party = ["arb"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = ["pydantic.BaseModel"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

