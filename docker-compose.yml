services:
  mysql:
    image: mysql:8.0
    hostname: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOTPASSWORD?Variable not set}
      MYSQL_DATABASE: ${DB_NAME?Variable not set}
      MYSQL_USER: ${DB_USER?Variable not set}
      MYSQL_PASSWORD: ${DB_PASSWORD?Variable not set}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    hostname: redis
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: lctar
      RABBITMQ_DEFAULT_PASS: lctarpassword
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  app:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    restart: always
    environment:
      DB_NAME: ${DB_NAME?Variable not set}
      DB_USER: ${DB_USER?Variable not set}
      DB_PASSWORD: ${DB_PASSWORD?Variable not set}
      DB_HOST: mysql
      DB_PORT: 3306
      REDIS_URL: redis://redis:6379/0
      RABBITMQ_URL: amqp://lctar:lctarpassword@rabbitmq:5672/
      MYSQLCLIENT_CFLAGS: "-I/usr/include/mysql"
      MYSQLCLIENT_LDFLAGS: "-L/usr/lib/x86_64-linux-gnu -lmysqlclient"
    depends_on:
      - mysql
      - redis
      - rabbitmq

  celery:
    build: .
    hostname: celery
    working_dir: /app/arb
    command: ["/usr/local/bin/entrypoint.sh", "celery", "-A", "arb", "worker", "-l", "info"]
    env_file:
      - .env
    restart: always
    environment:
      DB_NAME: ${DB_NAME?Variable not set}
      DB_USER: ${DB_USER?Variable not set}
      DB_PASSWORD: ${DB_PASSWORD?Variable not set}
      DB_HOST: mysql
      DB_PORT: 3306
      REDIS_URL: redis://redis:6379/0
      RABBITMQ_URL: amqp://lctar:lctarpassword@rabbitmq:5672/
      SKIP_MIGRATIONS: "1"
    depends_on:
      - mysql
      - redis
      - rabbitmq

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        API_URL: ${API_URL?https://lctar2.duckdns.org/api}
        NODE_ENV: production
    ports:
      - "443:80"
    restart: always
    volumes:
      - ./frontend/certs/frontend.crt:/etc/nginx/ssl/frontend.crt:ro
      - ./frontend/certs/frontend.key:/etc/nginx/ssl/frontend.key:ro

  # tuna:
  #   image: yuccastream/tuna:latest
  #   command: http https://frontend:80 --inspect=false
  #   restart: always
  #   environment:
  #     TUNA_SUBDOMAIN: ${TUNA_SUBDOMAIN?lct-ar-cheburashka}
  #     TUNA_TOKEN: ${TUNA_TOKEN?Variable not set}
  #     TUNA_HTTPS_REDIRECT: true
  #   depends_on:
  #     - frontend

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:
