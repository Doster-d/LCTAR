/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 .\orangebox.glb --transform 
Files: .\orangebox.glb [666.48KB] > C:\Users\Doster\Downloads\Telegram Desktop\orangebox-transformed.glb [147.04KB] (78%)
*/
import React, { forwardRef, useEffect, useMemo, useRef } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export const Model = forwardRef((props, ref) => {
  const group = useRef()
  const { scene, animations } = useGLTF('models/orangebox-transformed.glb')
  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    if (!ref) return
    if (typeof ref === 'function') ref(group.current)
    else ref.current = group.current
  }, [ref])

  useEffect(() => {
    if (!actions) return
    const actionList = Object.values(actions)
    if (!actionList.length) return
    actionList.forEach(action => {
      action.reset().play()
    })
    return () => {
      actionList.forEach(action => {
        action.stop()
      })
    }
  }, [actions])

  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <group name="Oranges_Box" position={[0.016, 0.1, 0]} rotation={[0, -0.01, 0.008]}>
          <mesh name="Orange6" geometry={nodes.Orange6.geometry} material={materials.Mat} position={[0.017, 0.023, -0.076]} rotation={[0.326, 0, -0.544]} />
          <mesh name="Orange4" geometry={nodes.Orange4.geometry} material={materials.Mat} position={[-0.024, 0.029, 0.018]} rotation={[1.126, 0.001, -0.045]} />
          <mesh name="Orange1" geometry={nodes.Orange1.geometry} material={materials.Mat} position={[-0.08, 0.046, 0.066]} rotation={[0.314, -0.285, -1.396]} />
          <mesh name="Orange11" geometry={nodes.Orange11.geometry} material={materials.Mat} position={[-0.084, 0.022, 0.14]} />
          <mesh name="Box" geometry={nodes.Box.geometry} material={materials['Mat.3']} position={[-0.003, -0.014, 0.002]} />
        </group>
        <mesh name="Orange" geometry={nodes.Orange.geometry} material={materials.Mat} position={[-0.068, 0.123, 0.14]} />
      </group>
    </group>
  )
})

useGLTF.preload('./models/orangebox-transformed.glb')
