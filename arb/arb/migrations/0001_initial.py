# Generated by Django 5.2.6 on 2025-09-25 20:34

import uuid

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Asset",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("type", models.CharField(max_length=50)),
                ("campaign", models.CharField(default="default", max_length=100)),
                ("meta", models.JSONField(default=dict)),
            ],
            options={
                "indexes": [
                    models.Index(fields=["slug"], name="asset_slug_idx"),
                    models.Index(
                        fields=["campaign", "type"], name="asset_campaign_type_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("total_score", models.IntegerField(default=0)),
                ("metadata", models.JSONField(default=dict)),
            ],
            options={
                "indexes": [
                    models.Index(fields=["email"], name="user_email_idx"),
                    models.Index(
                        fields=["is_verified", "created_at"],
                        name="user_verified_created_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("last_seen", models.DateTimeField(default=django.utils.timezone.now)),
                ("score", models.IntegerField(default=0)),
                (
                    "pending_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("metadata", models.JSONField(default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sessions",
                        to="arb.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PromoCode",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("code", models.CharField(max_length=128, unique=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("issued_at", models.DateTimeField(blank=True, null=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("used_at", models.DateTimeField(blank=True, null=True)),
                ("meta", models.JSONField(default=dict)),
                (
                    "session",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="promo_codes",
                        to="arb.session",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="promo_codes",
                        to="arb.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmailVerificationToken",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("token", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("expires_at", models.DateTimeField()),
                ("used", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_tokens",
                        to="arb.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ViewEvent",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("event_type", models.CharField(default="viewed_asset", max_length=50)),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("raw_payload", models.JSONField()),
                ("processed", models.BooleanField(default=True)),
                (
                    "asset",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="events",
                        to="arb.asset",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="arb.session",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SessionItemProgress",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("viewed_at", models.DateTimeField(blank=True, null=True)),
                ("times_viewed", models.IntegerField(default=0)),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="session_progress",
                        to="arb.asset",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="item_progress",
                        to="arb.session",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(fields=["session"], name="sip_session_idx"),
                    models.Index(fields=["asset"], name="sip_asset_idx"),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("session", "asset"), name="u_session_asset_progress"
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="session",
            index=models.Index(fields=["user"], name="session_user_idx"),
        ),
        migrations.AddIndex(
            model_name="session",
            index=models.Index(
                fields=["is_active", "last_seen"], name="session_active_lastseen_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="session",
            index=models.Index(fields=["created_at"], name="session_created_idx"),
        ),
        migrations.AddIndex(
            model_name="promocode",
            index=models.Index(fields=["code"], name="promocode_code_idx"),
        ),
        migrations.AddIndex(
            model_name="promocode",
            index=models.Index(fields=["email"], name="promocode_email_idx"),
        ),
        migrations.AddIndex(
            model_name="promocode",
            index=models.Index(fields=["issued_at"], name="promocode_issued_idx"),
        ),
        migrations.AddIndex(
            model_name="promocode",
            index=models.Index(fields=["used_at"], name="promocode_used_idx"),
        ),
        migrations.AddIndex(
            model_name="emailverificationtoken",
            index=models.Index(fields=["user"], name="evt_user_idx"),
        ),
        migrations.AddIndex(
            model_name="emailverificationtoken",
            index=models.Index(fields=["token"], name="evt_token_idx"),
        ),
        migrations.AddIndex(
            model_name="emailverificationtoken",
            index=models.Index(fields=["created_at"], name="evt_created_idx"),
        ),
        migrations.AddIndex(
            model_name="emailverificationtoken",
            index=models.Index(fields=["expires_at"], name="evt_expires_idx"),
        ),
        migrations.AddIndex(
            model_name="viewevent",
            index=models.Index(
                fields=["session", "timestamp"], name="ve_session_ts_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="viewevent",
            index=models.Index(fields=["asset"], name="ve_asset_idx"),
        ),
        migrations.AddIndex(
            model_name="viewevent",
            index=models.Index(fields=["event_type"], name="ve_event_type_idx"),
        ),
    ]
